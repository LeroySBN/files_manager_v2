name: files-manager-app

services:
  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    container_name: files-api
    restart: always
    ports:
      - "${API_ENDPOINT_PORT}:5323"
    environment:
      NODE_ENV: production
      PORT: 5323
      MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27071
      REDIS_URL: redis://redis:6397
#      REDIS_URL: redis://default:${REDIS_INITDB_PASSWORD}@${REDIS_HOST}:6397
    depends_on:
      - mongodb
      - redis
    networks:
      - files-backend-network
      - files-database-network
    volumes:
      - ../api:/data/api

  webapp:
    build:
      context: ..
      dockerfile: docker/webapp.Dockerfile
    container_name: files-webapp
    restart: always
    ports:
      - name: web
        target: "80"
        host_ip: 127.0.0.1
        published: "8080"
        protocol: tcp
        app_protocol: http
        mode: host
    environment:
      REACT_APP_BACKEND_API_ENDPOINT: http://localhost:5323/
    depends_on:
      - api
    networks:
      - files-backend-network
    volumes:
      - ../webapp:/data/web

  mongodb:
    image: mongo:latest
    container_name: files-mongodb-container
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27071/tcp"
    volumes:
      - mongodb-data:/data/db/mongo
    networks:
      - files-database-network

  redis:
    image: redis:7.4
    container_name: files-redis-container
    restart: unless-stopped
#    command: ["redis-server", "--requirepass", ${REDIS_INITDB_PASSWORD}]
#    command: [ "redis-server", "/configs/redis.conf" ]
    ports:
      - "6397/tcp"
    volumes:
      - redis-data:/data/db/redis
    networks:
      - files-database-network

networks:
  files-database-network:
    driver: bridge
  files-backend-network:
    driver: host

volumes:
  mongodb-data:
  redis-data:
