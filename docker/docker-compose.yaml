services:
  api:
    build:
      context: ..
      dockerfile: Dockerfile.api
    container_name: files-manager-api
    restart: always
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://mongodb:27017/${MONGO_INITDB_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      - mongodb
      - redis
    networks:
      - files-network
    volumes:
      - ../api:/usr/src/app/api

  web:
    build:
      context: ..
      dockerfile: Dockerfile.web
    container_name: files-manager-web
    restart: always
    ports:
      - "${WEB_PORT}:80"
    depends_on:
      - api
    networks:
      - files-network
    volumes:
      - ../web-app:/usr/src/app/web

  mongodb:
    image: mongo:latest
    container_name: files-mongodb-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - files-network

  redis:
    image: redis:latest
    container_name: files-redis-container
#    command: ["redis-server", "--requirepass", ${REDIS_INITDB_PASSWORD}]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
    networks:
      - files-network

networks:
  files-network:
    driver: bridge

volumes:
  mongodb-data:
  redis-data:
